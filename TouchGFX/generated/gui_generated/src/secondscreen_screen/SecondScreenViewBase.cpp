/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/secondscreen_screen/SecondScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

SecondScreenViewBase::SecondScreenViewBase() :
    buttonCallback(this, &SecondScreenViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &SecondScreenViewBase::flexButtonCallbackHandler),
    sliderValueChangedCallback(this, &SecondScreenViewBase::sliderValueChangedCallbackHandler)
{

    backgroundBox.setPosition(0, 0, 480, 272);
    backgroundBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    ButtonGoToMainScreen.setBoxWithBorderPosition(0, 0, 133, 272);
    ButtonGoToMainScreen.setBorderSize(5);
    ButtonGoToMainScreen.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    ButtonGoToMainScreen.setPosition(0, 0, 133, 272);
    ButtonGoToMainScreen.setAlpha(0);
    ButtonGoToMainScreen.setAction(flexButtonCallback);

    nextErrorButton.setXY(256, 226);
    nextErrorButton.setVisible(false);
    nextErrorButton.setBitmaps(touchgfx::Bitmap(BITMAP_ICONFINDER_NEXT_6290417_ID), touchgfx::Bitmap(BITMAP_ICONFINDER_NEXT_6290417_ID));
    nextErrorButton.setAction(buttonCallback);

    clearErrorsBtn.setXY(193, 226);
    clearErrorsBtn.setVisible(false);
    clearErrorsBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ICONFINDER_7_SOUND_OFF_3279057_ID), touchgfx::Bitmap(BITMAP_ICONFINDER_7_SOUND_OFF_3279057_ID));
    clearErrorsBtn.setAction(buttonCallback);

    CheckEngCodeValue.setXY(12, 237);
    CheckEngCodeValue.setVisible(false);
    CheckEngCodeValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 220, 0));
    CheckEngCodeValue.setLinespacing(0);
    Unicode::snprintf(CheckEngCodeValueBuffer, CHECKENGCODEVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID94).getText());
    CheckEngCodeValue.setWildcard(CheckEngCodeValueBuffer);
    CheckEngCodeValue.resizeToCurrentText();
    CheckEngCodeValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID93));

    EngProtCodeValue.setXY(314, 232);
    EngProtCodeValue.setVisible(false);
    EngProtCodeValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 220, 0));
    EngProtCodeValue.setLinespacing(0);
    Unicode::snprintf(EngProtCodeValueBuffer, ENGPROTCODEVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID96).getText());
    EngProtCodeValue.setWildcard(EngProtCodeValueBuffer);
    EngProtCodeValue.resizeToCurrentText();
    EngProtCodeValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID95));

    TpmsIndex.setXY(418, 53);
    TpmsIndex.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    TpmsIndex.setupVerticalSlider(7, 3, 0, 0, 125);
    TpmsIndex.setValueRange(1, 4);
    TpmsIndex.setValue(1);
    TpmsIndex.setNewValueCallback(sliderValueChangedCallback);

    FrIndex.setXY(222, 12);
    FrIndex.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_PRESSED_ID));
    FrIndex.setLabelText(touchgfx::TypedText(T_SINGLEUSEID115));
    FrIndex.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    FrIndex.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    FrIndex.setAction(buttonCallback);

    RrIndex.setXY(222, 72);
    RrIndex.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_PRESSED_ID));
    RrIndex.setLabelText(touchgfx::TypedText(T_SINGLEUSEID117));
    RrIndex.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    RrIndex.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    RrIndex.setAction(buttonCallback);

    RlIndex.setXY(222, 132);
    RlIndex.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_PRESSED_ID));
    RlIndex.setLabelText(touchgfx::TypedText(T_SINGLEUSEID118));
    RlIndex.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    RlIndex.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    RlIndex.setAction(buttonCallback);

    FlIndex.setXY(222, 196);
    FlIndex.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_SMALL_PRESSED_ID));
    FlIndex.setLabelText(touchgfx::TypedText(T_SINGLEUSEID119));
    FlIndex.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    FlIndex.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    FlIndex.setAction(buttonCallback);

    FrIndexValue.setXY(367, 25);
    FrIndexValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 221, 3));
    FrIndexValue.setLinespacing(0);
    Unicode::snprintf(FrIndexValueBuffer, FRINDEXVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID121).getText());
    FrIndexValue.setWildcard(FrIndexValueBuffer);
    FrIndexValue.resizeToCurrentText();
    FrIndexValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID120));

    RrIndexValue.setXY(367, 85);
    RrIndexValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 221, 3));
    RrIndexValue.setLinespacing(0);
    Unicode::snprintf(RrIndexValueBuffer, RRINDEXVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID123).getText());
    RrIndexValue.setWildcard(RrIndexValueBuffer);
    RrIndexValue.resizeToCurrentText();
    RrIndexValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID122));

    RlIndexValue.setXY(367, 149);
    RlIndexValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 221, 3));
    RlIndexValue.setLinespacing(0);
    Unicode::snprintf(RlIndexValueBuffer, RLINDEXVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID125).getText());
    RlIndexValue.setWildcard(RlIndexValueBuffer);
    RlIndexValue.resizeToCurrentText();
    RlIndexValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID124));

    FlIndexValue.setXY(367, 209);
    FlIndexValue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 221, 3));
    FlIndexValue.setLinespacing(0);
    Unicode::snprintf(FlIndexValueBuffer, FLINDEXVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID127).getText());
    FlIndexValue.setWildcard(FlIndexValueBuffer);
    FlIndexValue.resizeToCurrentText();
    FlIndexValue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID126));

    SliderIndexvalue.setPosition(427, 18, 16, 35);
    SliderIndexvalue.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 221, 3));
    SliderIndexvalue.setLinespacing(0);
    Unicode::snprintf(SliderIndexvalueBuffer, SLIDERINDEXVALUE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID129).getText());
    SliderIndexvalue.setWildcard(SliderIndexvalueBuffer);
    SliderIndexvalue.setTypedText(touchgfx::TypedText(T_SINGLEUSEID128));

    add(backgroundBox);
    add(ButtonGoToMainScreen);
    add(nextErrorButton);
    add(clearErrorsBtn);
    add(CheckEngCodeValue);
    add(EngProtCodeValue);
    add(TpmsIndex);
    add(FrIndex);
    add(RrIndex);
    add(RlIndex);
    add(FlIndex);
    add(FrIndexValue);
    add(RrIndexValue);
    add(RlIndexValue);
    add(FlIndexValue);
    add(SliderIndexvalue);
}

void SecondScreenViewBase::setupScreen()
{

}

void SecondScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &nextErrorButton)
    {
        //DisplayNextErrorInteraction
        //When nextErrorButton clicked call virtual function
        //Call nextError
        nextError();
    }
    else if (&src == &clearErrorsBtn)
    {
        //ClearErrorsInteraction
        //When clearErrorsBtn clicked call virtual function
        //Call clearErrors
        clearErrors();
    }
    else if (&src == &FrIndex)
    {
        //frSetIndex
        //When FrIndex clicked call virtual function
        //Call frSetIndex
        frSetIndex();
    }
    else if (&src == &RrIndex)
    {
        //rrSetIndex
        //When RrIndex clicked call virtual function
        //Call rrSetIndex
        rrSetIndex();
    }
    else if (&src == &RlIndex)
    {
        //rlSetIndex
        //When RlIndex clicked call virtual function
        //Call rlSetIndex
        rlSetIndex();
    }
    else if (&src == &FlIndex)
    {
        //flSetIndex
        //When FlIndex clicked call virtual function
        //Call flSetIndex
        flSetIndex();
    }
}

void SecondScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonGoToMainScreen)
    {
        //MoveToMainScreenBtnInteraction
        //When ButtonGoToMainScreen clicked call virtual function
        //Call moveToMainScreen
        moveToMainScreen();

        //MoveToMainScreenInteraction
        //When MoveToMainScreenBtnInteraction completed change screen to Main
        //Go to Main with screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
}

void SecondScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &TpmsIndex)
    {
        //tmpsIndexChangeInteraction
        //When TpmsIndex value changed call virtual function
        //Call tpmsIndexChanges
        tpmsIndexChanges(value);
    }
}
